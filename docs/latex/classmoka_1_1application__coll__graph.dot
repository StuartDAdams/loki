digraph "moka::application"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="moka::application",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The basic skeleton of a moka application. Contains all windowing, input-handling + rendering logic...."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" graphics_" ];
  Node2 [label="moka::graphics_device",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1graphics__device.html",tooltip="Performs primitive-based rendering, creates resources, handles system-level variables,..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" log_" ];
  Node3 [label="moka::logger",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1logger.html",tooltip="A logging class. A simple wrapper around a spdlog::logger object."];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mouse_" ];
  Node4 [label="moka::mouse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1mouse.html",tooltip="The mouse object. Updated in the main event loop so that it contains an up-to-date snapshot of the mo..."];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keyboard_" ];
  Node5 [label="moka::keyboard",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1keyboard.html",tooltip="The keyboard object. Updated in the main event loop so that it contains an up-to-date snapshot of the..."];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" timer_" ];
  Node6 [label="moka::timer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1timer.html",tooltip="A stopwatch style timer. Defines high-level time functions so that you don't have to go to a lot of e..."];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" window_" ];
  Node7 [label="moka::window",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1window.html",tooltip="Windowing class. Abstracts the native windowing API. Exposes a high-level interface to interact with ..."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" exit" ];
  Node8 [label="moka::signal\< Args \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoka_1_1signal.html",tooltip="Basic signal class. Allows you to write observer patterns while avoiding boilerplate code."];
}
